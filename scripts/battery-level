#!/bin/bash                                                          

#Battery level monitoring script. Displays the remaining level of every battery, and displays a notification if the total percentage of batteries is bellow 10%. Hibernate the system if the total percentage is below 3%.



#Compute the total level of battery
function compute_total_battery_level()
{
    local batteries_total_capacity=0
    local batteries_total_capacity_times_level=0
    local nb_of_batteries=`acpi -b | wc -l`

    for counter in `seq 1 $nb_of_batteries`;
    do
        local curr_battery_level=`acpi -b | grep -oP '[0-9]+(?=%)' | cut -d $'\n' -f${counter}`
        local curr_battery_capacity=`acpi -V | grep -oP '[0-9]+(?= mAh,)' | cut -d $'\n' -f${counter}`
        local curr_battery_capatity_times_level=`expr $curr_battery_capacity "*" $curr_battery_level`
        batteries_total_capacity=`expr $batteries_total_capacity "+" $curr_battery_capacity`
        batteries_total_capacity_times_level=`expr $batteries_total_capacity_times_level "+" $curr_battery_capatity_times_level`
    done
    local total_battery_level=`expr $batteries_total_capacity_times_level "/" $batteries_total_capacity`
    echo "$total_battery_level"
}
# Display the total battery level
function display_total_battery_level()
{
    echo "$(compute_total_battery_level) %"
}
#Display the details of all the batteries
function display_batteries_details()
{
    local nb_of_batteries=`acpi -b | wc -l`
    for counter in `seq 1 $nb_of_batteries`;
    do
        curr_battery_level=`acpi -b | grep -oP '[0-9]+(?=%)' | cut -d $'\n' -f${counter}`
        curr_battery_capacity=`acpi -V | grep -oP '[0-9]+(?= mAh,)' | cut -d $'\n' -f${counter}`
        echo -e "  $curr_battery_level% of $curr_battery_capacity"mAh
    done
}
# Send a notification to the specified user
# @param $1 The user to whom the notification should be sent
# @param $2 The title of the notification
# @param $3 The text notification
# @param $4 The urgency of the notification. Can be low, normal or critical
function send_notification(){
    sudo -u "$1" notify-send "$2" "$3" --urgency="$4" --expire-time=10000
}
function do_action_when_low_level()
{
    is_ac_plugged_in=`acpi -a | grep "on-line" | wc -l`

    users=`w -h | cut -d' ' -f1`
    IFS=$' '
    users_array=($(printf "%s\n" "${users[@]}" | sort -u | tr '\n' ' '))
    unset IFS

    low_level=10
    very_low_level=6
    critical_level=3

    for current_user in "${users_array[@]}"
    do
        if [[ $is_ac_plugged_in -eq 0 ]]; then
            if [[ $total_battery_level -le $low_level && $total_battery_level -gt $very_low_level ]]; then
                send_notification "$current_user" "Low battery" "Battery level is ${total_battery_level}% (Which is low)" "normal"

            elif [[ $total_battery_level -le $very_low_level && $total_battery_level -gt $critical_level ]]; then
                send_notification $current_user "Critical battery level" "Battery level is ${total_battery_level}%.\nYou should really consider plugging an AC power source\nor shutting your system down now" "critical"

            elif [[ $total_battery_level -le $critical_level ]]; then
                send_notification $current_user "Suspending system now" "The system is currently hybrid-suspending\nGo plug an AC power source now\n(I know, it's hard to get off the couch)" "normal"
                pm-suspend-hybrid
            fi
        fi
    done
}


display_total_battery_level
display_batteries_details
do_action_when_low_level
