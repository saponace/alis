#----- Command prompt settings
    ## enable parameter expansion, command substitution and arithmetic expansion in prompts
        setopt prompt_subst
    ## remove any right prompt from display when accepting a command line. This may be useful with terminals with other cut/paste methods
        setopt transient_rprompt
    ## this is needed by a lot of function in this zshrc
        autoload -Uz colors && colors




#----- Prompts
## Print pwd while alternating colors
alternatedPWD(){
    pwd=$PWD
    homestr="/home/$USER"
    sizehomestr=${#homestr}
    shortPWD=$pwd
    if [[ $pwd == /home/$USER* ]]
    then
        shortPWD=\~${pwd:$sizehomestr}
    fi
    count=0
    colorgrey="\e[0;49;37m"
    color1="\e[0;31m"
    color2="\e[0;32m"
    echo -ne "$color2"
    for (( i = 0; i < ${#shortPWD}; i++ ))
    do
        c="${shortPWD:$i:1}"
        ((mod=count%2))
        if [ "$c" == "/" ]
        then
            echo -ne "$colorgrey/"
            if [ "$mod" == 0 ]
            then
                echo -ne "$color1"
            else
                echo -ne "$color2"
            fi
            ((count++))
        else
            if [ "$c" == "-" ]; then
                printf "%s" "-"
            else
                echo -ne "$c"
            fi
        fi
    done
}




## Long prompt
[[ ${EUID} -ne 0 ]] && EUIDCOLOR=${fg_bold[blue]} || EUIDCOLOR=${fg[red]}
if [[ ${terminfo[colors]} == 256 ]];then
    FRAMECOLOR='%F{247}'
    FRAMECOLOR2='%f'
    EUIDCOLOR='%F{99}'
    if [[ ${EUID} -eq 0 ]];then
        HOSTNAMECOLOR='%B%F{black}'
        HOSTNAMECOLOR2='%F{white}'
    else
        HOSTNAMECOLOR='%F{82}'
        HOSTNAMECOLOR2='%F{247}'
    fi
    HOSTNAMECOLOR3='%F{160}' HOSTNAMECOLOR4='%f%b'
    TIMEDATECOLOR='%F{99}'
    TIMEDATECOLOR2='%f'
    PWDCOLOR=' %F{250}'
    PWDCOLOR2='%f'
else
    FRAMECOLOR='%B%F{blue}'
    FRAMECOLOR2='%f%b'
    if [[ ${EUID} -eq 0 ]];then
        HOSTNAMECOLOR='%B%F{black}'
        HOSTNAMECOLOR2='%F{red}'
    else
        HOSTNAMECOLOR='%B%F{green}'
        HOSTNAMECOLOR2='%F{black}'
    fi
    HOSTNAMECOLOR3='%F{cyan}'
    HOSTNAMECOLOR4=''
    TIMEDATECOLOR='%b%F{magenta}'
    TIMEDATECOLOR2='%f'
    PWDCOLOR=' '
    PWDCOLOR2=''
fi



#[[ ${LANG} =~ UTF-8 ]] && LONGPROMPT=$'\n'"${FRAMECOLOR}┌[${FRAMECOLOR2}%f%b${HOSTNAMECOLOR}%n${HOSTNAMECOLOR2}@${HOSTNAMECOLOR3}%m${HOSTNAMECOLOR4}${FRAMECOLOR}]─[${FRAMECOLOR2}${TIMEDATECOLOR}%D{%F %T}${TIMEDATECOLOR2}${FRAMECOLOR}]${FRAMECOLOR2}%(?..${FRAMECOLOR}─[%B%F{red}%?%f%b${FRAMECOLOR}]${FRAMECOLOR2})${PWDCOLOR}%~${PWDCOLOR2}\$(_-git_ps1)"$'\n'"${FRAMECOLOR}└─>${FRAMECOLOR2}%{${EUIDCOLOR}%} %#%f%b "

[[ ${LANG} =~ UTF-8 ]] && LONGPROMPT=$'\n'"${FRAMECOLOR}┌[${FRAMECOLOR2}%f%b${HOSTNAMECOLOR}%n${HOSTNAMECOLOR2}@${HOSTNAMECOLOR3}%m${HOSTNAMECOLOR4}${FRAMECOLOR}]─[${FRAMECOLOR2}${TIMEDATECOLOR}%D{%F %T}${TIMEDATECOLOR2}${FRAMECOLOR}]${FRAMECOLOR2}%(?..${FRAMECOLOR}─[%B%F{red}%?%f%b${FRAMECOLOR}]${FRAMECOLOR2}) \$(alternatedPWD)\$(_-git_ps1)"$'\n'"${FRAMECOLOR}└─>${FRAMECOLOR2}%{${EUIDCOLOR}%} %#%f%b "



PS2='%F{blue}> %f'
RPS2='%F{red}\%f'
unset EUIDCOLOR FRAMECOLOR FRAMECOLOR2 HOSTNAMECOLOR HOSTNAMECOLOR2 HOSTNAMECOLOR3 HOSTNAMECOLOR4 TIMEDATECOLOR TIMEDATECOLOR2 PWDCOLOR PWDCOLOR2



## Git PS1
_-git_ps1() {
    if [[ -n ${commands[git]} ]];then
        if [[ ${terminfo[colors]} == 256 ]];then
            ZSH_THEME_GIT_PROMPT_PREFIX=' %F{32}[%F{111}'
            ZSH_THEME_GIT_PROMPT_DIRTY='%F{214}*'
            ZSH_THEME_GIT_PROMPT_STASHED='%F{180}+'
            ZSH_THEME_GIT_PROMPT_SUFFIX='%F{32}]%f'
            ZSH_THEME_GIT_PROMPT_SUBPREFIX='%F{32}─[%f'
        else
            ZSH_THEME_GIT_PROMPT_PREFIX=' %F{blue}%B[%b%F{green}'
            ZSH_THEME_GIT_PROMPT_DIRTY='%F{yellow}%B*'
            ZSH_THEME_GIT_PROMPT_STASHED='%F{yellow}+'
            ZSH_THEME_GIT_PROMPT_SUFFIX='%F{blue}%B]%b%f'
            ZSH_THEME_GIT_PROMPT_SUBPREFIX='%F{blue}%B─[%b%f'
        fi
        _git_if_dirty() {
            [[ -n $(command git status -s --ignore-submodules=dirty 2> /dev/null | tail -n1) ]] && print ${ZSH_THEME_GIT_PROMPT_DIRTY}
        }
        _git_if_stashed() {
            { command git rev-parse --verify refs/stash &> /dev/null } && {
                print ${ZSH_THEME_GIT_PROMPT_SUBPREFIX}${ZSH_THEME_GIT_PROMPT_STASHED}${ZSH_THEME_GIT_PROMPT_SUFFIX}
            }
        }
        ref=$(command git symbolic-ref HEAD 2> /dev/null) || ref=$(command git rev-parse --short HEAD 2> /dev/null) && echo "${ZSH_THEME_GIT_PROMPT_PREFIX}${ref#refs/heads/}$(_git_if_dirty)${ZSH_THEME_GIT_PROMPT_SUFFIX}$(_git_if_stashed)"
    fi
}




## Short Prompt
SHORTPROMPT="%{$fg[green]%}>%{$reset_color%}"


## Aliasing prompt changes
alias short='export PROMPT=$SHORTPROMPT && export RPROMPT=""'
alias long='export PROMPT=$LONGPROMPT'


## Long prompt as default prompt
PS1=$LONGPROMPT
